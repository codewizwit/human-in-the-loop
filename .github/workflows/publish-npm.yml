name: Publish to NPM

on:
  push:
    branches: [main]
    paths:
      - 'src/cli/package.json'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check version changed
        id: version
        run: |
          CURRENT=$(cat src/cli/package.json | grep '"version"' | head -1 | awk -F'"' '{print $4}')
          PREVIOUS=$(git show HEAD~1:src/cli/package.json | grep '"version"' | head -1 | awk -F'"' '{print $4}')

          if [ "$CURRENT" != "$PREVIOUS" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - uses: pnpm/action-setup@v3
        if: steps.version.outputs.changed == 'true'
        with:
          version: 9

      - uses: actions/setup-node@v4
        if: steps.version.outputs.changed == 'true'
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - name: Install and test
        if: steps.version.outputs.changed == 'true'
        run: |
          pnpm install --frozen-lockfile
          pnpm lint
          pnpm typecheck
          pnpm build
          pnpm test

      - name: Publish to npm
        if: steps.version.outputs.changed == 'true'
        run: cd dist/src/cli && npm publish --provenance --access public

      - name: Create release
        if: steps.version.outputs.changed == 'true'
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"

          LAST_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          COMMITS=$([ -z "$LAST_TAG" ] && git log --pretty=format:"- %s (%h)" --no-merges -10 || git log $LAST_TAG..HEAD --pretty=format:"- %s (%h)" --no-merges)

          gh release create "v$VERSION" --title "v$VERSION" --notes "## Release v$VERSION

          $COMMITS

          Install: \`npm i -g @human-in-the-loop/cli@$VERSION\`"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
